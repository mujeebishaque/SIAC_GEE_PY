import ee

var simu_ref  = require('users/marcyinfeng/Algorithms/:/simu_ref')
var Sen2Cloud = require('users/marcyinfeng/Algorithms:S2_MT_Cloud')
var s2_view_ang = require('users/marcyinfeng/Algorithms/:/S2_view_angle')
var mcd19_prior = require('users/marcyinfeng/Algorithms:mcd19_prior')

var simu_ref  = simu_ref.simu_ref

var s2_bands     = ['B2', 'B3', 'B4', 'B8', 'B11', 'B12', 'B10', 'B8A', 'B7']
var common_bands = ['BLUE', 'GREEN', 'RED', 'NIR', 'SWIR1', 'SWIR2', 'CIRRUS', 'EB1', 'EB2'] 

var s2_cloud = function(image){

  var cloud = Sen2Cloud.get_cloud(image)
  var good = cloud.select('cloud').eq(0)
        .and(cloud.select('shadow').eq(0))
        .and(cloud.select('cirrus').eq(0))
  var kernel = ee.Kernel.square(1500, "meters")
  var good = good.focal_min({kernel: kernel})
  return image.updateMask(good)
}


var nn_aot = function(image){
  var w0 =  [[0.03625354543328285, 0.5012571811676025, 0.1855425238609314, 0.36202767491340637, -0.006303161848336458, -0.13971465826034546, -0.06511782854795456, -0.25634267926216125, -0.34220507740974426, 0.26947855949401855, -0.5047363638877869, 0.0046769557520747185, 0.03640158101916313, 0.25574594736099243, 0.01568952016532421], [-0.11358293145895004, -0.3107117712497711, 0.3943842649459839, 0.4599568545818329, 0.013827410526573658, -0.07944793254137039, 0.313108891248703, -0.2630312144756317, -0.30980557203292847, -0.23091991245746613, 0.592178225517273, 0.37121471762657166, -0.9320126175880432, 0.42103448510169983, 0.0037428997457027435], [0.16953665018081665, 0.9012167453765869, 0.3704817593097687, -0.38363003730773926, 0.06777768582105637, 0.38207218050956726, -0.534884512424469, 0.7702426910400391, -0.15269078314304352, -0.21943914890289307, 0.6945199966430664, -0.0872439444065094, 0.6753880977630615, -0.4654959738254547, 0.03243521973490715], [-0.675047755241394, -0.4795164465904236, 0.44892996549606323, -0.46442902088165283, 0.0771264061331749, 0.9472647905349731, 0.6801461577415466, -1.3602774143218994, 0.07988325506448746, 0.47323864698410034, 0.884431004524231, -0.591512143611908, -0.015417825430631638, -0.25259295105934143, -0.10608508437871933], [1.7643654346466064, 0.2634912133216858, 0.10944676399230957, -0.5944753885269165, 0.10534318536520004, -1.8134329319000244, -0.0715063288807869, 0.02963155321776867, -0.6944379806518555, 0.5040363073348999, -0.6224441528320312, -0.4034217894077301, 0.6395459175109863, -1.0926294326782227, -0.012002465315163136], [-1.4984276294708252, -0.8855035305023193, -1.3562469482421875, 0.030705338343977928, 0.1081962138414383, -0.36987781524658203, 0.9930906295776367, 0.9284014105796814, 0.20575439929962158, -0.27341315150260925, -0.5560532212257385, -0.5410156846046448, -0.07023639231920242, 1.5045794248580933, -0.14250284433364868], [-0.046835511922836304, 0.010672938078641891, 0.5088947415351868, 0.10088150203227997, -1.0148937702178955, 0.35223114490509033, 0.33000364899635315, -0.07150422781705856, 0.3328966498374939, -0.08228152245283127, 0.007488728035241365, 0.7443384528160095, 0.5130060911178589, 0.14811749756336212, 0.10141566395759583], [0.04984911158680916, -0.06286472082138062, 0.09246506541967392, 0.2391268014907837, 0.5009769201278687, 0.18391577899456024, 0.3049297034740448, -0.018073037266731262, -0.5670477151870728, 0.5244431495666504, 0.4321075677871704, 0.25923192501068115, 0.5505968928337097, 0.4515637457370758, 0.6991021037101746], [-0.005574250128120184, 0.002930112648755312, -0.02483210526406765, 0.008799354545772076, 0.021677909418940544, -0.012962818145751953, 0.026930589228868484, 0.011695749126374722, 0.19248448312282562, 0.017383694648742676, 0.025031672790646553, -0.027388595044612885, 0.015852779150009155, 0.012126697227358818, 0.05479435250163078], [0.07686885446310043, -0.04894852638244629, -0.15048041939735413, -0.0282090175896883, 0.34605640172958374, -0.1250356137752533, -0.03199319913983345, 0.025734717026352882, -0.07236716896295547, 0.08756523579359055, -0.07992692291736603, -0.0932471826672554, -0.01540373358875513, 0.010208237916231155, -0.0030725887045264244], [0.0019400164019316435, -0.010257518850266933, -0.08694101125001907, 0.047062743455171585, 0.01499317865818739, 0.01631169207394123, -0.0023579902481287718, 0.009100385941565037, 0.18333256244659424, 0.04604298248887062, 0.06835830211639404, 0.037447258830070496, 0.0046861073933541775, -0.03977937996387482, -0.017042722553014755]]
  var b0 =  [0.047149404883384705, 0.07851798832416534, -0.04167225956916809, 0.17509867250919342, -0.3764134645462036, 0.2162514477968216, -0.32503262162208557, 0.14120244979858398, -0.09827429056167603, -0.24806199967861176, -0.06665433198213577, 0.32197660207748413, -0.43639862537384033, -0.18273653090000153, -0.6515507102012634]
  
  
  var w1 =  [[-0.733356237411499, -0.1413414478302002, 0.22075599431991577, -1.701956868171692, -0.3424220681190491, 0.554276704788208, -0.0924324244260788, -0.7954184412956238, 0.9023462533950806, -0.03790704905986786, 0.815233051776886, -0.13035860657691956, -0.439334511756897, -0.5790190696716309, -2.384054183959961], [-0.005857559852302074, 0.3076145052909851, 0.20583491027355194, -0.01450353767722845, -0.03003576584160328, 0.07227437198162079, -0.2418418675661087, -0.21717555820941925, -0.15299533307552338, 0.9555873870849609, 0.20077787339687347, 0.6458649039268494, -0.8595367074012756, 0.3438805341720581, -0.09899365156888962], [0.058683354407548904, -0.38287654519081116, -0.45649921894073486, 0.08905335515737534, -0.15719881653785706, -0.27848124504089355, -0.2774604558944702, 0.3372671604156494, 0.4224059581756592, -0.1792868822813034, -0.009795228950679302, -0.08690722286701202, -0.1903369426727295, 0.13733544945716858, -0.36932480335235596], [0.038280170410871506, -0.4262760281562805, -0.2852219343185425, 0.28775137662887573, 0.4498123228549957, -0.12662898004055023, -0.03250046446919441, 0.5014643669128418, 0.13651317358016968, -0.15536120533943176, 0.23675715923309326, -0.3336576521396637, 0.33451130986213684, 0.2563663125038147, 0.008471520617604256], [-0.2788952887058258, -0.39525046944618225, -0.310183584690094, -0.025335542857646942, 0.2856786251068115, -0.35053616762161255, 0.2681894600391388, -0.3009626567363739, 0.15717266499996185, 0.2470448911190033, -0.21761614084243774, -0.23105934262275696, -0.10065336525440216, -0.800388753414154, 0.03150574490427971], [0.5347961783409119, -0.05138799548149109, -0.41086632013320923, 0.2995508909225464, -0.3416067063808441, 0.01915479265153408, -0.16319440305233002, -0.4041683077812195, -0.3966291546821594, -0.06581480801105499, -0.1597813367843628, 0.11192521452903748, 0.44802334904670715, 0.17785228788852692, 1.0003143548965454], [-0.7446311116218567, -0.10821858048439026, 0.15465500950813293, 0.22708073258399963, 0.24614912271499634, -0.41223859786987305, -0.1643843799829483, -0.5875085592269897, 0.14200858771800995, -0.2245379537343979, 0.8198712468147278, -0.4499746561050415, 0.2254917472600937, -0.10793644189834595, 0.2384517341852188], [0.0783349946141243, -0.3440445065498352, -0.15079686045646667, 0.7972004413604736, -8.308347702026367, 0.12600165605545044, -0.22590094804763794, -0.1929805427789688, 0.6441643834114075, 0.012577639892697334, 0.2791247069835663, 0.06133468076586723, -0.14171886444091797, 0.028087930753827095, 0.2976093292236328], [-0.10304782539606094, -0.09100082516670227, 0.24986499547958374, 0.06440825015306473, -0.1306295096874237, 0.2404499500989914, -0.17273977398872375, 0.30292460322380066, 0.3160284757614136, -0.10619065165519714, 0.3549762964248657, 0.09440150856971741, 0.2781972587108612, 0.003170349868014455, -0.2812384068965912], [-0.39628639817237854, 0.07640570402145386, -0.04771285504102707, 0.7160601615905762, -0.23204109072685242, 0.5478882193565369, -0.4723014533519745, -0.1092691421508789, 0.44733867049217224, 0.5678320527076721, 0.17232394218444824, 0.4424605369567871, -0.12041065841913223, -0.2420455515384674, -0.029426174238324165], [-0.4265967011451721, -0.035577982664108276, 0.15639075636863708, -0.14203575253486633, -0.7134109735488892, 0.42494824528694153, 0.1827227622270584, 0.05647256597876549, -0.3474777042865753, -0.6162809133529663, 0.2511456310749054, 0.03546718880534172, -0.39629441499710083, 0.5175067782402039, 0.22994688153266907], [0.13819174468517303, -0.009998232126235962, 0.02263575606048107, -0.3612695038318634, 0.13087604939937592, -0.2814752757549286, 0.21579834818840027, -0.10712724179029465, 0.17695166170597076, -0.09721943736076355, -0.19519154727458954, 0.030433211475610733, 0.2515012323856354, 0.6470904350280762, -0.27932754158973694], [-0.5101807713508606, -0.1875913441181183, -0.32760024070739746, 0.18660800158977509, -0.24563975632190704, -0.2543209195137024, -0.2274869680404663, 0.6800384521484375, -0.1920056939125061, 0.6010883450508118, 0.16184012591838837, 0.894192636013031, -0.3821495473384857, -0.1897846907377243, -0.1518978327512741], [-0.15232130885124207, 0.3144434094429016, 0.12406177818775177, 0.6563804745674133, 0.521576464176178, 0.6041841506958008, 0.04523856192827225, -0.6283900737762451, -0.6624590158462524, -0.19655437767505646, 0.2927437722682953, -0.17847390472888947, 0.7163229584693909, 0.043810971081256866, 0.9535734057426453], [0.9731220006942749, -0.07118731737136841, 0.0313480943441391, -0.9647555947303772, 0.04229205474257469, 0.2410702258348465, -0.12453117966651917, 0.20424827933311462, 0.208767369389534, -0.07711265981197357, -0.6368112564086914, 0.006169293075799942, 0.2600182890892029, 0.4763582646846771, -0.45209985971450806]]
  var b1 =  [0.6408981680870056, 0.0, -0.08753552287817001, -0.27711963653564453, 0.19012729823589325, -0.14893761277198792, -0.08171169459819794, 0.2578561007976532, 0.1041131317615509, 0.20927859842777252, -0.4586271047592163, 0.32359620928764343, 0.11738938093185425, -0.048717666417360306, -0.38095521926879883]
  
  
  var w2 =  [[0.039184052497148514, -0.2884494662284851, -0.7898776531219482, 0.41049686074256897, -1.3635393381118774, 1.4141777753829956, -0.16889327764511108, 0.2589435577392578, -0.2662287652492523, -2.812835454940796, -1.7120556831359863, 1.1528066396713257, -0.11168909817934036, 0.13617338240146637, -0.3359455168247223], [0.3754241466522217, 0.007330387830734253, -0.2416982203722, -0.31248804926872253, 0.11397403478622437, -0.08926796913146973, -0.3911990821361542, 0.24259847402572632, 0.138441264629364, -0.2753438651561737, 0.2128739356994629, -0.2871321141719818, 0.26661860942840576, 0.21870261430740356, 0.3532252311706543], [-0.31185969710350037, 0.0905504822731018, 0.22272345423698425, -0.33845195174217224, -0.4106532037258148, 0.3039509057998657, 0.19391411542892456, -0.07680180668830872, 0.12881913781166077, -0.14297576248645782, 0.1265481859445572, -0.42963907122612, 0.012110471725463867, -0.43409156799316406, -0.03753850609064102], [-0.026575518772006035, -0.09333175420761108, 0.006858083885163069, -0.2814272344112396, 0.6344820261001587, 0.005429730284959078, -0.4513624608516693, -0.3059946596622467, 0.0773080363869667, 0.17704911530017853, -0.7128698229789734, 0.07522043585777283, -0.2159832864999771, -0.03957225754857063, 0.3255547285079956], [0.1813540905714035, -0.02881312370300293, -0.02221054770052433, 0.0825338289141655, -0.3981606662273407, -3.7745187282562256, -0.3338950574398041, -0.2371349334716797, 0.08010927587747574, 0.6388477087020874, 1.7001737356185913, -1.0597658157348633, 0.41636738181114197, 0.22750696539878845, -1.0870972871780396], [-0.016861386597156525, -0.3439334034919739, -0.40748894214630127, -0.4387516975402832, -0.07397755980491638, 0.1689598262310028, 0.22036218643188477, -0.1749386042356491, -0.03839775547385216, 0.23736532032489777, 0.04021013528108597, 0.09953086823225021, -0.3438405990600586, -0.09818382561206818, 0.027646513655781746], [0.020149512216448784, -0.0028984546661376953, -0.4202423393726349, 0.3444710969924927, 0.0450422540307045, -0.15625348687171936, 0.39555561542510986, -0.3328421711921692, -0.15433497726917267, -0.02155383676290512, 0.4945494532585144, -0.24835661053657532, 0.4225394129753113, -0.13991136848926544, 0.2120383083820343], [-0.1519452929496765, -0.16209357976913452, 0.5525018572807312, -0.3921816647052765, -0.5637235641479492, -2.0980658531188965, 0.19092075526714325, 0.14154106378555298, -0.003940401133149862, -0.12494911998510361, -0.16777418553829193, 0.2114957869052887, 0.22022463381290436, -0.8483191132545471, -0.0397091880440712], [0.09793223440647125, 0.03544607758522034, 0.020921938121318817, -0.3093940019607544, -0.06990233808755875, 0.5096924901008606, -0.09620114415884018, -0.27036893367767334, -0.10408290475606918, -1.0850025415420532, -2.2133946418762207, 1.2791632413864136, -0.34041139483451843, -0.22170381247997284, -0.44378212094306946], [1.3133553266525269, -0.019374966621398926, 0.1540536731481552, -0.08820842951536179, -0.03407371789216995, 0.17579300701618195, 0.09755561500787735, -0.1716233640909195, 0.15728029608726501, -0.002292363904416561, 0.05106322094798088, -0.027010705322027206, 0.07467658817768097, -0.14071053266525269, -0.7333695292472839], [0.28934136033058167, -0.024064183235168457, 0.23280127346515656, -0.075370654463768, 0.08456136286258698, 0.004479072522372007, -0.12873053550720215, -0.37804725766181946, 0.24188975989818573, -0.5256036520004272, -0.7649604082107544, 0.8082820177078247, 0.07291349768638611, -0.5775809288024902, -0.02732260338962078], [-1.145658254623413, -0.11521601676940918, 0.22031119465827942, 0.335953027009964, 0.1502026468515396, 0.6033368706703186, 0.19343458116054535, 0.2558198869228363, 0.1384253203868866, 0.2650969922542572, 0.11588310450315475, -0.08638365566730499, -0.024196796119213104, 0.2002970278263092, -0.11995633691549301], [0.4570409059524536, -0.3049805462360382, -0.012704271823167801, -0.3650861084461212, 0.09730140119791031, -0.4214532971382141, 0.08558636903762817, 0.045964159071445465, -0.313946008682251, -0.08551289886236191, 0.06236545741558075, 0.0600782111287117, -0.02573586441576481, 0.16343548893928528, 0.8694217801094055], [0.2241198569536209, -0.4278143048286438, 0.565156877040863, -0.2231237292289734, -0.07062600553035736, -0.1399383693933487, -0.45375633239746094, -0.4073321521282196, 0.31469452381134033, 0.055717833340168, 0.1387307196855545, -0.283096045255661, -0.18858124315738678, 0.17701385915279388, -0.3253251016139984], [0.0012024445459246635, -0.22237975895404816, -0.11295397579669952, -0.29836133122444153, 0.6192458868026733, -0.09344194084405899, -0.2405681610107422, 0.14254885911941528, 0.622596800327301, 0.01180947758257389, -0.6228489875793457, 0.30906838178634644, -0.012774213217198849, -0.3277358412742615, 0.10636850446462631]]
  var b2 =  [0.24031533300876617, 0.0, -0.1858825385570526, -0.03029945120215416, -0.2810039520263672, -0.2772034704685211, -0.09800419956445694, -0.014257424511015415, -0.05554330721497536, -0.0011565062450245023, 0.3390290141105652, -0.007760888896882534, -0.053394097834825516, 0.3012102246284485, -0.005764073226600885]
  
  
  var w3 =  [[0.5315843820571899, -0.0686267614364624, 0.35611870884895325, 0.48769429326057434, 0.46783050894737244, -2.566441059112549, 0.5088626742362976, 0.20560258626937866, 0.013642816804349422, 0.13103391230106354, 0.24127662181854248, -0.11604013293981552, -0.7783989310264587, -0.06056322902441025, -2.617017984390259], [0.3012653589248657, 0.25912636518478394, -0.19069558382034302, 0.07800626754760742, 0.3180786967277527, -0.3466355800628662, 0.3999056816101074, 0.3211672306060791, 0.018208175897598267, 0.13650691509246826, 0.04340556263923645, -0.125573992729187, -0.21515704691410065, -0.32069844007492065, -0.40922537446022034], [0.538122832775116, -0.043892234563827515, 0.16086210310459137, 0.4297304153442383, -0.06219877675175667, 0.036911044269800186, 0.45396602153778076, 0.2640147805213928, 0.0458800345659256, 0.18922218680381775, -0.44223102927207947, 0.3200053870677948, 0.4101647138595581, 0.005335244350135326, 0.21825939416885376], [0.19401568174362183, 0.179584801197052, -0.3498181998729706, 0.0050230976194143295, 0.06808072328567505, 0.20910072326660156, 0.23602542281150818, -0.23283720016479492, 0.2518329918384552, 0.31754451990127563, 0.3757670521736145, 0.35814306139945984, -0.1284080147743225, -0.014841854572296143, -0.3357120454311371], [-0.2443210333585739, -0.9341161847114563, -0.9521743059158325, -0.43021613359451294, -0.6718010902404785, 0.5905708074569702, -0.15329191088676453, -0.025011096149683, 0.7847227454185486, -0.6567943096160889, -1.5258387327194214, -0.18306465446949005, -0.15497013926506042, 0.6622364521026611, 0.6378393769264221], [0.009260310791432858, 0.11498507112264633, 0.4502575993537903, 0.6348763108253479, 0.1265975832939148, 0.07374805212020874, 0.0952996164560318, -0.41684865951538086, 0.5475526452064514, 0.21736975014209747, -0.44616058468818665, -3.6068358421325684, -0.5238198041915894, 0.14304913580417633, 0.1170014888048172], [0.22927379608154297, -0.19461078941822052, 0.3156065046787262, 0.34897032380104065, 0.10982362926006317, 0.37458622455596924, 0.2613814175128937, 0.06712430715560913, -0.02568856067955494, 0.10401196777820587, -0.11925205588340759, -0.10701853036880493, -0.23794761300086975, 0.4167923331260681, -0.2626514434814453], [-0.16279816627502441, -0.015583282336592674, 0.3620299696922302, 0.01589313894510269, 0.32434529066085815, 0.38540416955947876, 0.3013899028301239, 0.08384060114622116, -0.20527125895023346, -0.45836612582206726, -0.1426420509815216, 0.19082766771316528, -0.07842589169740677, 0.3191290497779846, -0.32335928082466125], [0.48473861813545227, 0.23231586813926697, 0.4797777533531189, 0.14815601706504822, 0.538017749786377, -0.09250760078430176, 0.15871305763721466, 0.45990362763404846, -0.06810396164655685, -0.03429778665304184, -0.41045743227005005, -0.5204950571060181, -0.683329164981842, 0.20722869038581848, -0.4315221905708313], [-0.08970357477664948, 0.03848773613572121, 0.1648523360490799, 0.28935596346855164, 0.3294740915298462, -0.1305786520242691, 0.38635337352752686, -0.2922838032245636, 0.051124755293130875, 0.06719539314508438, -0.17643320560455322, -1.4594796895980835, -0.03848055377602577, -0.18398530781269073, -0.029465440660715103], [1.7807451486587524, -0.3308245837688446, 0.15939633548259735, 1.4930592775344849, 1.4281259775161743, -2.0342600345611572, 1.0351401567459106, 0.6336825489997864, -0.30174174904823303, 1.1275094747543335, -0.3846566677093506, 1.6520090103149414, -0.7612810730934143, -2.005992889404297, -0.7170839905738831], [-0.11646164208650589, -1.3139456510543823, -0.5106565952301025, -0.13896499574184418, -0.004792596213519573, 0.42414331436157227, -0.06455258280038834, -0.17518745362758636, 0.7704408168792725, -1.042858600616455, -0.5706637501716614, -0.2310381382703781, 0.2762027978897095, 0.8546690344810486, 0.3834981918334961], [0.054064344614744186, 0.11929088085889816, -0.3083251416683197, 0.06841452419757843, 0.11410786211490631, 0.2530422806739807, 0.3587992489337921, 0.07899890840053558, -0.041116975247859955, -0.1597476601600647, 0.18646186590194702, -0.3971113860607147, -0.16480523347854614, 0.2061881273984909, -0.33176302909851074], [-0.0143095338717103, -0.21940866112709045, -0.16954417526721954, 0.05483224242925644, -0.4282545745372772, 0.2529059052467346, -0.1280277967453003, 0.5144586563110352, -0.11517924815416336, 0.20054428279399872, 0.42202556133270264, -0.5081843137741089, 0.03807903826236725, 0.037787288427352905, 0.235788032412529], [-0.1814158856868744, -0.05294119566679001, 0.038046661764383316, -0.08719246834516525, -0.9265784621238708, 0.034886088222265244, 0.04774726554751396, -0.40704840421676636, 0.09520506113767624, -0.7865196466445923, -0.40950363874435425, -0.47144824266433716, 0.8487375378608704, 0.2237257957458496, 0.6034457087516785]]
  var b3 =  [-0.22347715497016907, 0.25217029452323914, -0.20939069986343384, -0.010187814943492413, -0.08613811433315277, -0.13359735906124115, 0.11564095318317413, -0.07000811398029327, 0.09514885395765305, 0.30853357911109924, 0.06990046054124832, 0.25660616159439087, -0.02190558984875679, -0.215083047747612, -0.059676408767700195]
  
  
  var w4 =  [[0.3088415563106537], [0.6430483460426331], [-0.5658026337623596], [0.464423805475235], [-0.46365615725517273], [0.4275228679180145], [0.6362334489822388], [0.262773334980011], [-0.8363578915596008], [0.4242619574069977], [-0.342887818813324], [-1.440832257270813], [-0.983039140701294], [0.8448666930198669], [-0.4931436777114868]]
  var b4 =  [0.11471551656723022]
  
  var arrayImage1D = image.toArray()
  var arrayImage2D = arrayImage1D.toArray(1);
  var imageAxis = 0;
  var bandAxis  = 1;
  var arrayLength = arrayImage2D.arrayLength(imageAxis)
  var h1  = arrayImage2D.arrayTranspose().matrixMultiply(ee.Image(ee.Array(w0))).add(ee.Image(ee.Array(b0)).toArray(1).arrayTranspose())
  var in1 = h1.max(0)
  var h2  = in1.matrixMultiply(ee.Image(ee.Array(w1))).add(ee.Image(ee.Array(b1)).toArray(1).arrayTranspose())
  var in2 = h2.max(0)
  var h3  = in2.matrixMultiply(ee.Image(ee.Array(w2))).add(ee.Image(ee.Array(b2)).toArray(1).arrayTranspose())
  var in3 = h3.max(0)
  var h4  = in3.matrixMultiply(ee.Image(ee.Array(w3))).add(ee.Image(ee.Array(b3)).toArray(1).arrayTranspose())
  var in4 = h4.max(0)
  var h5  = in4.matrixMultiply(ee.Image(ee.Array(w4))).add(ee.Image(ee.Array(b4)).toArray(1).arrayTranspose())
  var out = h5.arrayProject([0])
              .arrayFlatten([['aot']])
  return out    
}

var get_tco3 = function(image){
  var image_date = image.date()
  var tco3 = ee.ImageCollection('TOMS/MERGED')
          .filterDate(ee.Date(image_date).advance(-3, 'day'), 
                      ee.Date(image_date).advance( 3, 'day'))
          .mean()
  var start_year = ee.Date(image_date).advance(-3, 'year').get('year')
  var end_year   = ee.Date(image_date).advance( 3, 'year').get('year')
  var month      = ee.Date(image_date).get('month')
  
  var monthly_climatology = ee.ImageCollection('TOMS/MERGED')
                              .filter(ee.Filter.calendarRange(start_year, end_year, 'year'))
                              .filter(ee.Filter.calendarRange(month , month, 'month'))
                              .median()
                              .multiply(0.001)
  
  var ozone = ee.Image(ee.Algorithms.If(tco3.bandNames(), tco3.select('ozone').multiply(0.001), monthly_climatology.select('ozone')))
  
  var tco3 = ozone.unmask().where(ozone.mask().eq(0), monthly_climatology)
  
  var ker = ee.Kernel.square(200, "pixels")
  var tco3_mean = tco3.reduceNeighborhood({reducer: ee.Reducer.mean(), 
                                            kernel: ker,
                                            inputWeight: 'mask',
                                            skipMasked:false,
                                            optimization:'boxcar',
                                          }).rename('tco3')
  var tco3 = tco3.unmask().where(tco3.mask().eq(0), tco3_mean)
  return tco3
}


function maskClouds(img) {
  var MAX_CLOUD_PROBABILITY = 40;
  var clouds = ee.Image(img.get('cloud_probability')).select('probability');
  var isNotCloud = clouds.lt(MAX_CLOUD_PROBABILITY);
  var mask = img.mask().focal_min(60, 'square',  'meters', 10)

  return img.updateMask(isNotCloud).updateMask(mask.eq(1));
}

var get_aot = function(image){
  
  var geom  = image.geometry()
  var image_date = image.date()
  var prior_aot  = mcd19_prior.get_aot_prior(image)
  var projection = image.select('B2').projection()
  var tco3 = get_tco3(image)
  var zero_image = image.select(0).multiply(0).unmask().clip(geom)
  var crs = projection.crs()
  
  var s2 = ee.ImageCollection('COPERNICUS/S2');
  var s2Clouds = ee.ImageCollection('COPERNICUS/S2_CLOUD_PROBABILITY');
  var start = image.date().format('YYYY-MM-dd');
  var end = image.date().advance(1, 'day').format('YYYY-MM-dd');
  var criteria = ee.Filter.and( ee.Filter.bounds(geom), 
                                ee.Filter.date(start, end)
                                );
  s2 = s2.filter(criteria);
  s2Clouds = s2Clouds.filter(criteria);

  var joinCondition = ee.Filter.equals({leftField: 'system:index', rightField: 'system:index'});
  
  var s2WithCloudMask = ee.Join.saveFirst('cloud_probability').apply({
                          primary: s2,
                          secondary: s2Clouds,
                          condition: joinCondition
                     });

  image = ee.ImageCollection(s2WithCloudMask)
         .map(maskClouds)
         .map(s2_view_ang.sen2angle)
         .median()
         .set('system:time_start', image.get('system:time_start'))
         
  var NDSI = image.normalizedDifference(['B3', 'B11']).rename('NDSI');
  var snow = NDSI.gt(0.15).and(image.select('B8').divide(10000).gt(0.1500))
                                .and(image.select('B12').divide(10000).lt(0.12)).rename('snow')
  
  var start_year = ee.Date(image_date).advance(-1, 'year').get('year')
  var end_year   = ee.Date(image_date).get('year')
  
  var vza = image.select('vza')
  var vaa = image.select('vaa')
  var sza = image.select('sza')
  var saa = image.select('saa')
  var raa = vaa.subtract(saa).rename('raa')
  
  var deg2rad = ee.Number(Math.PI).divide(ee.Number(180.0))
  var cos_sza = (sza.multiply(deg2rad)).cos()
  var cos_vza = (vza.multiply(deg2rad)).cos()
  var cos_raa = (raa.multiply(deg2rad)).cos()
  
  var angs = image.addBands([sza, vza, raa]).reproject(crs, null, 500)
  var sur = simu_ref(angs)
  
  image = ee.Image(image.select(s2_bands.slice(0,6), common_bands.slice(0,6)).divide(10000)
                        .updateMask(snow.eq(0))
                        .copyProperties(image))//
                        .set('system:time_start', image.get('system:time_start'))
                        
  var valid_num = image.select('RED').mask().reduceRegion(ee.Reducer.sum(), geom, 500, null, null, false, 10e13).get('RED')
  var mask = ee.Algorithms.If(ee.Number(valid_num).lt(100), image.multiply(0), image.mask())
  
  image = image.updateMask(ee.Image(mask))
  
  var ker = ee.Kernel.gaussian({radius: 1500, 
                                sigma: 300, 
                                units: 'meters', 
                                normalize: true})
  image = image.convolve(ker)
               .set('system:time_start', image.get('system:time_start'))
  
  image = image.select(image.bandNames(), common_bands.slice(0,6)).reproject(crs, null, 500)

  var boa_diff = sur.select('sur_6').divide(image.select('SWIR2')).rename('diff')
  var pp = boa_diff.reduceRegion(ee.Reducer.percentile([15, 50, 85]), geom, 1000, null, null, false, 10e13)
  var zero_pp = ee.Dictionary({'diff_p15':0, 'diff_p85':0, 'diff_p50':0})
  var pp = ee.Dictionary(ee.Algorithms.If(pp.get('diff_p15'), pp, zero_pp))
  
  var diff_min  = ee.Number(pp.get('diff_p15'))
  var diff_max  = ee.Number(pp.get('diff_p85'))
  var stab_mask = (boa_diff.lte(diff_max)).and(boa_diff.gte(diff_min))//.and(stab_mask)
  
  var elevation = ee.Image('USGS/GMTED2010').select('be75').multiply(0.0001)
  var inps = ee.Image.cat([sur.select('sur_1' ),
                           sur.select('sur_2'),
                           sur.select('sur_3'),
                          (image.select('BLUE'  ).rename('toa_1').subtract(0.0138)).divide(1.00617),
                          (image.select('GREEN' ).rename('toa_2').subtract(0.002)).divide(1.00088),
                           image.select('RED'   ).rename('toa_3'),
                          cos_sza, 
                          cos_vza, 
                          cos_raa,
                          tco3.rename('tco3'), 
                          elevation.rename('ele')])
                         .updateMask(stab_mask)
 
  var aot = nn_aot(inps).multiply(3).set('system:time_start', image.get('system:time_start'))
  
  var aot_median = aot.rename('aot').reduceRegion(ee.Reducer.median(), geom, 1000, null, null, false, 10e13)
  var aot_median = ee.Algorithms.If(aot_median.get('aot'), aot_median.get('aot'), 0.1)
  
  var ker = ee.Kernel.square(250, "pixels")
  var saot = aot.reduceNeighborhood({reducer: ee.Reducer.mean(), 
                                          kernel: ker,
                                          inputWeight: 'mask',
                                          skipMasked:false,
                                          optimization:'boxcar',
                                        }).rename('aot')
  aot = saot.unmask().where(saot.mask().eq(0), ee.Image.constant(aot_median).float()).clip(geom)
  
  
  return aot


exports.get_aot = get_aot




